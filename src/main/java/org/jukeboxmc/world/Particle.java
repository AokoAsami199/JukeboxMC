package org.jukeboxmc.world;

/**
 * @author LucGamesYT
 * @version 1.0
 */
public enum Particle {

    SHOOT( LevelEvent.PARTICLE_SHOOT ),
    DESTROY_BLOCK( LevelEvent.PARTICLE_DESTROY_BLOCK ),
    POTION_SPLASH( LevelEvent.PARTICLE_POTION_SPLASH ),
    EYE_OF_ENDER_DEATH( LevelEvent.PARTICLE_EYE_OF_ENDER_DEATH ),
    MOB_BLOCK_SPAWN( LevelEvent.PARTICLE_MOB_BLOCK_SPAWN ),
    CROP_GROWTH( LevelEvent.PARTICLE_CROP_GROWTH ),
    SOUND_GUARDIAN_GHOST( LevelEvent.PARTICLE_SOUND_GUARDIAN_GHOST ),
    DEATH_SMOKE( LevelEvent.PARTICLE_DEATH_SMOKE ),
    DENY_BLOCK( LevelEvent.PARTICLE_DENY_BLOCK ),
    GENERIC_SPAWN( LevelEvent.PARTICLE_GENERIC_SPAWN ),
    DRAGON_EGG( LevelEvent.PARTICLE_DRAGON_EGG ),
    CROP_EATEN( LevelEvent.PARTICLE_CROP_EATEN ),
    CRIT( LevelEvent.PARTICLE_CRIT ),
    TELEPORT( LevelEvent.PARTICLE_TELEPORT ),
    CRACK_BLOCK( LevelEvent.PARTICLE_CRACK_BLOCK ),
    BUBBLES( LevelEvent.PARTICLE_BUBBLES ),
    EVAPORATE( LevelEvent.PARTICLE_EVAPORATE ),
    DESTROY_ARMOR_STAND( LevelEvent.PARTICLE_DESTROY_ARMOR_STAND ),
    BREAKING_EGG( LevelEvent.PARTICLE_BREAKING_EGG ),
    DESTROY_EGG( LevelEvent.PARTICLE_DESTROY_EGG ),
    EVAPORATE_WATER( LevelEvent.PARTICLE_EVAPORATE_WATER ),
    DESTROY_BLOCK_NO_SOUND( LevelEvent.PARTICLE_DESTROY_BLOCK_NO_SOUND ),
    KNOCKBACK_ROAR( LevelEvent.PARTICLE_KNOCKBACK_ROAR ),
    TELEPORT_TRAIL( LevelEvent.PARTICLE_TELEPORT_TRAIL ),
    POINT_CLOUD( LevelEvent.PARTICLE_POINT_CLOUD ),
    EXPLOSION( LevelEvent.PARTICLE_EXPLOSION ),
    BLOCK_EXPLOSION( LevelEvent.PARTICLE_BLOCK_EXPLOSION ),
    DRIPSTONE_DRIP( LevelEvent.PARTICLE_DRIPSTONE_DRIP ),
    FIZZ_EFFECT( LevelEvent.PARTICLE_FIZZ_EFFECT ),
    WAX_ON( LevelEvent.PARTICLE_WAX_ON ),
    WAX_OFF( LevelEvent.PARTICLE_WAX_OFF ),
    SCRAPE( LevelEvent.PARTICLE_SCRAPE ),
    BUBBLE( LevelEvent.PARTICLE_BUBBLE ),
    BUBBLE_MANUAL( LevelEvent.PARTICLE_BUBBLE_MANUAL ),
    CRITICAL( LevelEvent.PARTICLE_CRITICAL ),
    BLOCK_FORCE_FIELD( LevelEvent.PARTICLE_BLOCK_FORCE_FIELD ),
    SMOKE( LevelEvent.PARTICLE_SMOKE ),
    EXPLODE( LevelEvent.PARTICLE_EXPLODE ),
    EVAPORATION( LevelEvent.PARTICLE_EVAPORATION ),
    FLAME( LevelEvent.PARTICLE_FLAME ),
    CANDLE_FLAME( LevelEvent.PARTICLE_CANDLE_FLAME ),
    LAVA( LevelEvent.PARTICLE_LAVA ),
    LARGE_SMOKE( LevelEvent.PARTICLE_LARGE_SMOKE ),
    REDSTONE( LevelEvent.PARTICLE_REDSTONE ),
    RISING_RED_DUST( LevelEvent.PARTICLE_RISING_RED_DUST ),
    ITEM_BREAK( LevelEvent.PARTICLE_ITEM_BREAK ),
    SNOWBALL_POOF( LevelEvent.PARTICLE_SNOWBALL_POOF ),
    HUGE_EXPLODE( LevelEvent.PARTICLE_HUGE_EXPLODE ),
    HUGE_EXPLODE_SEED( LevelEvent.PARTICLE_HUGE_EXPLODE_SEED ),
    MOB_FLAME( LevelEvent.PARTICLE_MOB_FLAME ),
    HEART( LevelEvent.PARTICLE_HEART ),
    TERRAIN( LevelEvent.PARTICLE_TERRAIN ),
    TOWN_AURA( LevelEvent.PARTICLE_TOWN_AURA ),
    PORTAL( LevelEvent.PARTICLE_PORTAL ),
    MOB_PORTAL( LevelEvent.PARTICLE_MOB_PORTAL ),
    SPLASH( LevelEvent.PARTICLE_SPLASH ),
    SPLASH_MANUAL( LevelEvent.PARTICLE_SPLASH_MANUAL ),
    WATER_WAKE( LevelEvent.PARTICLE_WATER_WAKE ),
    DRIP_WATER( LevelEvent.PARTICLE_DRIP_WATER ),
    DRIP_LAVA( LevelEvent.PARTICLE_DRIP_LAVA ),
    DRIP_HONEY( LevelEvent.PARTICLE_DRIP_HONEY ),
    STALACTITE_DRIP_WATER( LevelEvent.PARTICLE_STALACTITE_DRIP_WATER ),
    STALACTITE_DRIP_LAVA( LevelEvent.PARTICLE_STALACTITE_DRIP_LAVA ),
    FALLING_DUST( LevelEvent.PARTICLE_FALLING_DUST ),
    MOB_SPELL( LevelEvent.PARTICLE_MOB_SPELL ),
    MOB_SPELL_AMBIENT( LevelEvent.PARTICLE_MOB_SPELL_AMBIENT ),
    MOB_SPELL_INSTANTANEOUS( LevelEvent.PARTICLE_MOB_SPELL_INSTANTANEOUS ),
    INK( LevelEvent.PARTICLE_INK ),
    SLIME( LevelEvent.PARTICLE_SLIME ),
    RAIN_SPLASH( LevelEvent.PARTICLE_RAIN_SPLASH ),
    VILLAGER_ANGRY( LevelEvent.PARTICLE_VILLAGER_ANGRY ),
    VILLAGER_HAPPY( LevelEvent.PARTICLE_VILLAGER_HAPPY ),
    ENCHANTMENT_TABLE( LevelEvent.PARTICLE_ENCHANTMENT_TABLE ),
    TRACKING_EMITTER( LevelEvent.PARTICLE_TRACKING_EMITTER ),
    NOTE( LevelEvent.PARTICLE_NOTE ),
    WITCH_SPELL( LevelEvent.PARTICLE_WITCH_SPELL ),
    CARROT( LevelEvent.PARTICLE_CARROT ),
    MOB_APPEARANCE( LevelEvent.PARTICLE_MOB_APPEARANCE ),
    END_ROD( LevelEvent.PARTICLE_END_ROD ),
    SPIT( LevelEvent.PARTICLE_SPIT ),
    TOTEM( LevelEvent.PARTICLE_TOTEM ),
    FOOD( LevelEvent.PARTICLE_FOOD ),
    FIREWORKS_STARTER( LevelEvent.PARTICLE_FIREWORKS_STARTER ),
    FIREWORKS_SPARK( LevelEvent.PARTICLE_FIREWORKS_SPARK ),
    FIREWORKS_OVERLAY( LevelEvent.PARTICLE_FIREWORKS_OVERLAY ),
    BALLOON_GAS( LevelEvent.PARTICLE_BALLOON_GAS ),
    COLORED_FLAME( LevelEvent.PARTICLE_COLORED_FLAME ),
    SPARKLER( LevelEvent.PARTICLE_SPARKLER ),
    CONDUIT( LevelEvent.PARTICLE_CONDUIT ),
    BUBBLE_COLUMN_UP( LevelEvent.PARTICLE_BUBBLE_COLUMN_UP ),
    BUBBLE_COLUMN_DOWN( LevelEvent.PARTICLE_BUBBLE_COLUMN_DOWN ),
    SNEEZE( LevelEvent.PARTICLE_SNEEZE ),
    SHULKER_BULLET( LevelEvent.PARTICLE_SHULKER_BULLET ),
    BLEACH( LevelEvent.PARTICLE_BLEACH ),
    DRAGON_DESTROY_BLOCK( LevelEvent.PARTICLE_DRAGON_DESTROY_BLOCK ),
    MYCELIUM_DUST( LevelEvent.PARTICLE_MYCELIUM_DUST ),
    FALLING_RED_DUST( LevelEvent.PARTICLE_FALLING_RED_DUST ),
    CAMPFIRE_SMOKE( LevelEvent.PARTICLE_CAMPFIRE_SMOKE ),
    TALL_CAMPFIRE_SMOKE( LevelEvent.PARTICLE_TALL_CAMPFIRE_SMOKE ),
    RISING_DRAGONS_BREATH( LevelEvent.PARTICLE_RISING_DRAGONS_BREATH ),
    DRAGONS_BREATH( LevelEvent.PARTICLE_DRAGONS_BREATH ),
    BLUE_FLAME( LevelEvent.PARTICLE_BLUE_FLAME ),
    SOUL( LevelEvent.PARTICLE_SOUL ),
    OBSIDIAN_TEAR( LevelEvent.PARTICLE_OBSIDIAN_TEAR ),
    PORTAL_REVERSE( LevelEvent.PARTICLE_PORTAL_REVERSE ),
    SNOWFLAKE( LevelEvent.PARTICLE_SNOWFLAKE ),
    VIBRATION_SIGNAL( LevelEvent.PARTICLE_VIBRATION_SIGNAL ),
    SCULK_SENSOR_REDSTONE( LevelEvent.PARTICLE_SCULK_SENSOR_REDSTONE ),
    SPORE_BLOSSOM_SHOWER( LevelEvent.PARTICLE_SPORE_BLOSSOM_SHOWER ),
    SPORE_BLOSSOM_AMBIENT( LevelEvent.PARTICLE_SPORE_BLOSSOM_AMBIENT ),
    WAX( LevelEvent.PARTICLE_WAX ),
    ELECTRIC_SPARK( LevelEvent.PARTICLE_ELECTRIC_SPARK );

    private final LevelEvent levelEvent;

    Particle( LevelEvent levelEvent ) {
        this.levelEvent = levelEvent;
    }

    public LevelEvent toLevelEvent() {
        return this.levelEvent;
    }
}
